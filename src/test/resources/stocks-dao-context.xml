<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans      
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd        
	http://www.springframework.org/schema/aop         
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd    
	http://www.springframework.org/schema/tx      
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd        
	http://www.springframework.org/schema/context      
	http://www.springframework.org/schema/context/spring-context-3.0.xsd        
	http://www.springframework.org/schema/jee      
	http://www.springframework.org/schema/jee/spring-jee-3.0.xsd         
	http://www.springframework.org/schema/lang     
	http://www.springframework.org/schema/lang/spring-lang-3.0.xsd     
	http://www.springframework.org/schema/security  
	http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<!-- ******************************************************************** -->
	<!-- Scan for dao layer annotated beans -->
	<!-- ******************************************************************** -->
	<context:component-scan base-package="com.focustech.portfolio.dao"
		scoped-proxy="interfaces" />

	<!-- ******************************************************************** -->
	<!-- Mark bean transactions as annotation driven -->
	<!-- ******************************************************************** -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- ******************************************************************** -->
	<!-- PropertyConfigurer for the DAO -->
	<!-- ******************************************************************** -->
	<context:property-placeholder location="classpath:stocks-dao.properties"
		system-properties-mode="OVERRIDE" />

	<!-- ******************************************************************** -->
	<!-- Setup the transaction manager -->
	<!-- ******************************************************************** -->
	<!-- Using Atomikos Transaction Manager -->
	<bean class="com.atomikos.icatch.jta.UserTransactionManager"
		destroy-method="close" id="atomikosTransactionManager" init-method="init">
		<property name="forceShutdown" value="true" />
		<property name="startupTransactionService" value="true" />
		<property name="transactionTimeout" value="60" />
	</bean>

	<bean class="com.atomikos.icatch.jta.UserTransactionImp" id="atomikosUserTransaction" />

	<bean class="org.springframework.transaction.jta.JtaTransactionManager"
		id="transactionManager">
		<property name="transactionManager" ref="atomikosTransactionManager" />
		<property name="userTransaction" ref="atomikosUserTransaction" />
		<property name="transactionSynchronizationName" value="SYNCHRONIZATION_ON_ACTUAL_TRANSACTION" />
	</bean>


	<!-- Using Apache DBCP Data Sources -->
	<bean class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" name="stocks_dbDS" lazy-init="true">
		<property name="driverClassName" value="${stocks_db.connection.driver_class}" />
		<property name="username" value="${stocks_db.connection.username}" />
		<property name="password" value="${stocks_db.connection.password}" />
		<property name="url" value="${stocks_db.connection.url}" />
		<property name="maxIdle" value="${stocks_db.minPoolSize}" />
		<property name="maxActive" value="${stocks_db.maxPoolSize}" />
		<property name="validationQuery" value="${db_validation_query}" />
	</bean>

	<!-- ******************************************************************** -->
	<!-- Setup each persistence unit -->
	<!-- ******************************************************************** -->

	<!-- Configure a JPA vendor adapter -->
	<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
		id="stocks_dbJPAVendorAdapter">
		<property name="showSql" value="${stocks_db.show_sql}" />
		<property name="generateDdl" value="${stocks_db.generateDdl}" />
		<property name="databasePlatform" value="${stocks_db.dialect}" />
	</bean>

	<bean
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		id="stocks_db">
		<property name="dataSource" ref="stocks_dbDS" />
		<property name="persistenceUnitName" value="stocks_db" />
		<property name="jpaVendorAdapter" ref="stocks_dbJPAVendorAdapter" />
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.transaction.manager_lookup_class"
					value="com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup" />
				<entry key="hibernate.connection.release_mode" value="on_close" />
			</map>
		</property>
	</bean>
	
</beans>
